:orphan:

:py:mod:`aim2dat.plots.simple_plot`
===================================

.. py:module:: aim2dat.plots.simple_plot

.. autoapi-nested-parse::

   Test plots for the base plot class (will be removed at a later stage).



Module Contents
---------------

Classes
~~~~~~~

.. autoapisummary::

   aim2dat.plots.simple_plot.SimplePlot





.. py:class:: SimplePlot(**kwargs)


   Bases: :py:obj:`aim2dat.plots.base_plot._BasePlot`, :py:obj:`aim2dat.plots.base_mixin._HLineMixin`, :py:obj:`aim2dat.plots.base_mixin._VLineMixin`

   Direct and flexible interface to the backend plot libraries.


   .. rubric:: Overview

   .. list-table:: Properties
      :header-rows: 0
      :widths: auto

      * - :py:obj:`backend <aim2dat.plots.simple_plot.SimplePlot.backend>`
        - used backend library to plot the data. Supported values are ``"matplotlib"`` and
      * - :py:obj:`custom_alpha <aim2dat.plots.simple_plot.SimplePlot.custom_alpha>`
        - Alpha value(s) controlling the opacity of plot elements.
      * - :py:obj:`custom_colors <aim2dat.plots.simple_plot.SimplePlot.custom_colors>`
        - Colors used in the plot.
      * - :py:obj:`custom_linestyles <aim2dat.plots.simple_plot.SimplePlot.custom_linestyles>`
        - Line styles used in the plot (This feature is not supported by all plot
      * - :py:obj:`custom_linewidths <aim2dat.plots.simple_plot.SimplePlot.custom_linewidths>`
        - Line widths used in the plot (This feature is not supported by all plot
      * - :py:obj:`custom_markers <aim2dat.plots.simple_plot.SimplePlot.custom_markers>`
        - Marker types used in the plot (This feature is not supported by all plot
      * - :py:obj:`custom_xticklabels <aim2dat.plots.simple_plot.SimplePlot.custom_xticklabels>`
        - List of labels for the ticks on the x-axis.
      * - :py:obj:`custom_xticks <aim2dat.plots.simple_plot.SimplePlot.custom_xticks>`
        - List of values to set ticks on the x-axis.
      * - :py:obj:`custom_yticklabels <aim2dat.plots.simple_plot.SimplePlot.custom_yticklabels>`
        - List of labels for the ticks on the y-axis.
      * - :py:obj:`custom_yticks <aim2dat.plots.simple_plot.SimplePlot.custom_yticks>`
        - List of values to set ticks on the y-axis.
      * - :py:obj:`data_labels <aim2dat.plots.simple_plot.SimplePlot.data_labels>`
        - List of labels for all data sets.
      * - :py:obj:`equal_aspect_ratio <aim2dat.plots.simple_plot.SimplePlot.equal_aspect_ratio>`
        - Set equal aspect ratio of the plot(s).
      * - :py:obj:`legend_bbox_to_anchor <aim2dat.plots.simple_plot.SimplePlot.legend_bbox_to_anchor>`
        - Shift between box and anchor. The default value is ``(1, 1)``.
      * - :py:obj:`legend_loc <aim2dat.plots.simple_plot.SimplePlot.legend_loc>`
        - Location of the legend. The default value is ``1``.
      * - :py:obj:`legend_ncol <aim2dat.plots.simple_plot.SimplePlot.legend_ncol>`
        - Columns of the legend (only supported for the matplotlib backend).
      * - :py:obj:`legend_sort_entries <aim2dat.plots.simple_plot.SimplePlot.legend_sort_entries>`
        - Sort entries of the legend.
      * - :py:obj:`plot_grid <aim2dat.plots.simple_plot.SimplePlot.plot_grid>`
        - Whether to draw a grid in the plot. The default value is ``False``.
      * - :py:obj:`ratio <aim2dat.plots.simple_plot.SimplePlot.ratio>`
        - Length-to-width ratio of the plot given as a tuple of two numbers.
      * - :py:obj:`show_colorbar <aim2dat.plots.simple_plot.SimplePlot.show_colorbar>`
        - Show colorbar (not supported by all plots).
      * - :py:obj:`show_grid <aim2dat.plots.simple_plot.SimplePlot.show_grid>`
        - Whether to draw a grid in the plot. The default value is ``False``.
      * - :py:obj:`show_legend <aim2dat.plots.simple_plot.SimplePlot.show_legend>`
        - Show legend. The default value is ``False``.
      * - :py:obj:`show_plot <aim2dat.plots.simple_plot.SimplePlot.show_plot>`
        - Show plot. The default value is ``False``.
      * - :py:obj:`store_path <aim2dat.plots.simple_plot.SimplePlot.store_path>`
        - Path of the folder to store the plot. The default value is ``./``.
      * - :py:obj:`store_plot <aim2dat.plots.simple_plot.SimplePlot.store_plot>`
        - Store plot. The default value is ``False``.
      * - :py:obj:`style_sheet <aim2dat.plots.simple_plot.SimplePlot.style_sheet>`
        - Custom matplotlib style sheet.
      * - :py:obj:`subplot_adjust <aim2dat.plots.simple_plot.SimplePlot.subplot_adjust>`
        - Keyword arguments for the matplotlib ``subplots_adjust`` function.
      * - :py:obj:`subplot_align_ylabels <aim2dat.plots.simple_plot.SimplePlot.subplot_align_ylabels>`
        - Align y label of plot. The default value is ``False``.
      * - :py:obj:`subplot_gridspec <aim2dat.plots.simple_plot.SimplePlot.subplot_gridspec>`
        - Grid spec values.
      * - :py:obj:`subplot_hspace <aim2dat.plots.simple_plot.SimplePlot.subplot_hspace>`
        - Vertical spacing between the subplots.
      * - :py:obj:`subplot_ncols <aim2dat.plots.simple_plot.SimplePlot.subplot_ncols>`
        - Number of columns. The default value is ``1``.
      * - :py:obj:`subplot_nrows <aim2dat.plots.simple_plot.SimplePlot.subplot_nrows>`
        - Number of rows. The default value is ``2``.
      * - :py:obj:`subplot_share_colorbar <aim2dat.plots.simple_plot.SimplePlot.subplot_share_colorbar>`
        - Use one common colorbar for all subplots.
      * - :py:obj:`subplot_share_legend <aim2dat.plots.simple_plot.SimplePlot.subplot_share_legend>`
        - Merge legend items of all subplots.
      * - :py:obj:`subplot_sharex <aim2dat.plots.simple_plot.SimplePlot.subplot_sharex>`
        - Share the x-axis of subplots located in the same column.
      * - :py:obj:`subplot_sharey <aim2dat.plots.simple_plot.SimplePlot.subplot_sharey>`
        - Share the y-axis of subplots located in the same row.
      * - :py:obj:`subplot_sup_title <aim2dat.plots.simple_plot.SimplePlot.subplot_sup_title>`
        - Title of the whole figure.
      * - :py:obj:`subplot_sup_x_label <aim2dat.plots.simple_plot.SimplePlot.subplot_sup_x_label>`
        - x-label of the whole figure.
      * - :py:obj:`subplot_sup_y_label <aim2dat.plots.simple_plot.SimplePlot.subplot_sup_y_label>`
        - y-label of the whole figure.
      * - :py:obj:`subplot_tight_layout <aim2dat.plots.simple_plot.SimplePlot.subplot_tight_layout>`
        - Tight layout of plot. The default value is ``False``.
      * - :py:obj:`subplot_wspace <aim2dat.plots.simple_plot.SimplePlot.subplot_wspace>`
        - Horizontal spacing between the subplots.
      * - :py:obj:`x_label <aim2dat.plots.simple_plot.SimplePlot.x_label>`
        - Label of the x-axis. If ``None`` is given no label will be shown. The
      * - :py:obj:`x_range <aim2dat.plots.simple_plot.SimplePlot.x_range>`
        - Range of the x-axis. The default value is ``None``.
      * - :py:obj:`y_label <aim2dat.plots.simple_plot.SimplePlot.y_label>`
        - Label of the y-axis. If ``None`` is given no label will be shown. The
      * - :py:obj:`y_range <aim2dat.plots.simple_plot.SimplePlot.y_range>`
        - Range of the y-axis. The default value is ``None``.


   .. list-table:: Methods
      :header-rows: 0
      :widths: auto

      * - :py:obj:`add_hline <aim2dat.plots.simple_plot.SimplePlot.add_hline>`\ (y, x_min, x_max, color, line_style, scaled, foreground, subplot_assignment, data_label)
        - Add a vertical line to the plot.
      * - :py:obj:`add_vline <aim2dat.plots.simple_plot.SimplePlot.add_vline>`\ (x, y_min, y_max, color, line_style, scaled, foreground, subplot_assignment, data_label)
        - Add a vertical line to the plot.
      * - :py:obj:`auto_set_axis_properties <aim2dat.plots.simple_plot.SimplePlot.auto_set_axis_properties>`\ (set_x_label, set_y_label)
        - Whether the axis labels and other axis properties are auto-generated.
      * - :py:obj:`create_default_gridspec <aim2dat.plots.simple_plot.SimplePlot.create_default_gridspec>`\ (nrows, ncols, nplots, heights, widths, center_last_row)
        - Create default grid for multiple plots.
      * - :py:obj:`import_bar_data_set <aim2dat.plots.simple_plot.SimplePlot.import_bar_data_set>`\ (data_label, x_values, y_values, heights, plot_label, color, alpha, bottom, width, align)
        - Import data set for a bar plot.
      * - :py:obj:`import_scatter_data_set <aim2dat.plots.simple_plot.SimplePlot.import_scatter_data_set>`\ (data_label, x_values, y_values, y_values_2, plot_label, color, face_color, alpha, line_style, line_width, marker, marker_face_color, marker_edge_width, use_fill, use_fill_between)
        - Import data set for a scatter plot.
      * - :py:obj:`plot <aim2dat.plots.simple_plot.SimplePlot.plot>`\ (data_labels, plot_title, plot_name, subplot_assignment)
        - Plot the data sets.
      * - :py:obj:`remove_additional_plot_elements <aim2dat.plots.simple_plot.SimplePlot.remove_additional_plot_elements>`\ ()
        - Remove all added plot elements.
      * - :py:obj:`reset_gridspec <aim2dat.plots.simple_plot.SimplePlot.reset_gridspec>`\ ()
        - Reset gridspec settings.
      * - :py:obj:`return_data_labels <aim2dat.plots.simple_plot.SimplePlot.return_data_labels>`\ ()
        - Return the labels of all data sets.



   .. py:property:: backend

      used backend library to plot the data. Supported values are ``"matplotlib"`` and
      ``"plotly"``.

      :type: str

   .. py:property:: custom_alpha

      Alpha value(s) controlling the opacity of plot elements.

      :type: float, list or tuple

   .. py:property:: custom_colors

      Colors used in the plot.

      :type: list or tuple

   .. py:property:: custom_linestyles

      Line styles used in the plot (This feature is not supported by all plot
      types).

      :type: list or tuple

   .. py:property:: custom_linewidths

      Line widths used in the plot (This feature is not supported by all plot
      types).

      :type: list or tuple

   .. py:property:: custom_markers

      Marker types used in the plot (This feature is not supported by all plot
      types).

      :type: list or tuple

   .. py:property:: custom_xticklabels

      List of labels for the ticks on the x-axis.

      :type: list

   .. py:property:: custom_xticks

      List of values to set ticks on the x-axis.

      :type: list

   .. py:property:: custom_yticklabels

      List of labels for the ticks on the y-axis.

      :type: list

   .. py:property:: custom_yticks

      List of values to set ticks on the y-axis.

      :type: list

   .. py:property:: data_labels

      List of labels for all data sets.

      :type: list

   .. py:property:: equal_aspect_ratio

      Set equal aspect ratio of the plot(s).

      :type: bool

   .. py:property:: legend_bbox_to_anchor

      Shift between box and anchor. The default value is ``(1, 1)``.

      :type: tuple or list

   .. py:property:: legend_loc

      Location of the legend. The default value is ``1``.

      :type: int

   .. py:property:: legend_ncol

      Columns of the legend (only supported for the matplotlib backend).

      :type: int

   .. py:property:: legend_sort_entries

      Sort entries of the legend.

      :type: bool

   .. py:property:: plot_grid

      Whether to draw a grid in the plot. The default value is ``False``.

      :type: bool

   .. py:property:: ratio

      Length-to-width ratio of the plot given as a tuple of two numbers.

      :type: tuple or list

   .. py:property:: show_colorbar

      Show colorbar (not supported by all plots).

      :type: bool

   .. py:property:: show_grid

      Whether to draw a grid in the plot. The default value is ``False``.

      :type: bool

   .. py:property:: show_legend

      Show legend. The default value is ``False``.

      :type: bool

   .. py:property:: show_plot

      Show plot. The default value is ``False``.

      :type: bool

   .. py:property:: store_path

      Path of the folder to store the plot. The default value is ``./``.

      :type: str

   .. py:property:: store_plot

      Store plot. The default value is ``False``.

      :type: bool

   .. py:property:: style_sheet

      Custom matplotlib style sheet.

      :type: str

   .. py:property:: subplot_adjust

      Keyword arguments for the matplotlib ``subplots_adjust`` function.

      :type: dict

   .. py:property:: subplot_align_ylabels

      Align y label of plot. The default value is ``False``.

      :type: bool

   .. py:property:: subplot_gridspec

      Grid spec values.

      :type: list or tuple

   .. py:property:: subplot_hspace

      Vertical spacing between the subplots.

      :type: float

   .. py:property:: subplot_ncols

      Number of columns. The default value is ``1``.

      :type: int

   .. py:property:: subplot_nrows

      Number of rows. The default value is ``2``.

      :type: int

   .. py:property:: subplot_share_colorbar

      Use one common colorbar for all subplots.

      :type: bool

   .. py:property:: subplot_share_legend

      Merge legend items of all subplots.

      :type: bool

   .. py:property:: subplot_sharex

      Share the x-axis of subplots located in the same column.

      :type: bool

   .. py:property:: subplot_sharey

      Share the y-axis of subplots located in the same row.

      :type: bool

   .. py:property:: subplot_sup_title

      Title of the whole figure.

      :type: str

   .. py:property:: subplot_sup_x_label

      x-label of the whole figure.

      :type: str

   .. py:property:: subplot_sup_y_label

      y-label of the whole figure.

      :type: str

   .. py:property:: subplot_tight_layout

      Tight layout of plot. The default value is ``False``.

      :type: bool

   .. py:property:: subplot_wspace

      Horizontal spacing between the subplots.

      :type: float

   .. py:property:: x_label

      Label of the x-axis. If ``None`` is given no label will be shown. The
      default value is ``None``.

      :type: str or None

   .. py:property:: x_range

      Range of the x-axis. The default value is ``None``.

      :type: tuple or list

   .. py:property:: y_label

      Label of the y-axis. If ``None`` is given no label will be shown. The
      default value is ``None``.

      :type: str or None

   .. py:property:: y_range

      Range of the y-axis. The default value is ``None``.

      :type: tuple or list


   .. py:method:: add_hline(y, x_min, x_max, color=None, line_style=None, scaled=False, foreground=False, subplot_assignment=None, data_label=None)

      Add a vertical line to the plot.

      :Parameters: * **y** (*float*) -- y-position of the line.
                   * **x_min** (*float*) -- Bottom x-position of the line.
                   * **x_max** (*float*) -- Top x-position of the line.
                   * **color** (*str or None*) -- Color of the line.
                   * **line_style** (*str or None*) -- Line style of the line.
                   * **scaled** (*bool*) -- Whether the input is given in scaled positions.
                   * **foreground** (*bool*) -- Whether to plot the line in front of the other elements.
                   * **subplot_assignment** (*list or None*) -- Assignment of the line to individual subplots.


   .. py:method:: add_vline(x, y_min, y_max, color=None, line_style=None, scaled=False, foreground=False, subplot_assignment=None, data_label=None)

      Add a vertical line to the plot.

      :Parameters: * **x** (*float*) -- x-position of the line.
                   * **y_min** (*float*) -- Bottom y-position of the line.
                   * **y_max** (*float*) -- Top y-position of the line.
                   * **color** (*str or None*) -- Color of the line.
                   * **line_style** (*str or None*) -- Line style of the line.
                   * **scaled** (*bool*) -- Whether the input is given in scaled positions.
                   * **foreground** (*bool*) -- Whether to plot the line in front of the other elements.
                   * **subplot_assignment** (*list or None*) -- Assignment of the line to individual subplots.


   .. py:method:: auto_set_axis_properties(set_x_label=True, set_y_label=True)

      Whether the axis labels and other axis properties are auto-generated.

      :Parameters: * **set_x_label** (*bool*) -- Set x-axis label automatically.
                   * **set_y_label** (*bool*) -- Set y-axis label automatically.


   .. py:method:: create_default_gridspec(nrows, ncols, nplots, heights=1, widths=1, center_last_row=True)

      Create default grid for multiple plots.

      :Parameters: * **nrows** (*Int*) -- Number of rows.
                   * **ncols** (*int*) -- Number columns.
                   * **nplots** (*int*) -- Number of subplots.
                   * **heights** (*int (optional)*) -- Height of subplots.
                   * **widths** (*int (optional)*) -- Width of subplots.
                   * **center_last_row** (*bool (optional)*) -- Center the plots of the last row.


   .. py:method:: import_bar_data_set(data_label, x_values, y_values, heights, plot_label=None, color=None, alpha=None, bottom=0.0, width=0.8, align='center')

      Import data set for a bar plot.

      :Parameters: * **data_label** (*str*) -- Internal label of the data set.
                   * **x_values** (*list*) -- List of x-values of the points.
                   * **y_values** (*list*) -- List of y-values of the points.
                   * **heights** (*list*) -- List of bar heights.
                   * **plot_label** (*str (optional)*) -- Label of the data set shown in the legend.
                   * **color** (*str (optional)*) -- Color of the data set.
                   * **alpha** (*float (optional)*) -- Transparency of the data set.
                   * **bottom** (*float*) -- Position of the bottom of the bars.
                   * **width** (*float*) -- Width of the bars.
                   * **align** (*str*) -- Alignment of the bar.


   .. py:method:: import_scatter_data_set(data_label, x_values, y_values, y_values_2=None, plot_label=None, color=None, face_color=None, alpha=None, line_style=None, line_width=None, marker=None, marker_face_color=None, marker_edge_width=None, use_fill=False, use_fill_between=False)

      Import data set for a scatter plot.

      :Parameters: * **data_label** (*str*) -- Internal label of the data set.
                   * **x_values** (*list*) -- List of x-values of the points.
                   * **y_values** (*list*) -- List of y-values of the points.
                   * **y_values_2** (*list*) -- Second list of y-values to be used with ``use_fill_between``.
                   * **plot_label** (*str (optional)*) -- Label of the data set shown in the legend.
                   * **color** (*str (optional)*) -- Color of the data set.
                   * **face_color** (*str (optional)*) -- Face color of the data set.
                   * **alpha** (*float (optional)*) -- Transparency of the data set.
                   * **line_style** (*str (optional)*) -- Line style of the data set.
                   * **line_width** (*int or float*) -- Line width of the data set.
                   * **marker** (*str (optional)*) -- Marker shape.
                   * **marker_face_color** (*str (optional)*) -- Marker face color.
                   * **marker_edge_width** (*int (optional)*) -- Marker size.
                   * **use_fill** (*bool (optional)*) -- Whether to fill the area between the x-axis and the data points.
                   * **use_fill_between** (*bool (optional)*) -- Whether to fill the area between the deta sets.


   .. py:method:: plot(data_labels, plot_title=None, plot_name='plot.png', subplot_assignment=None)

      Plot the data sets.

      :Parameters: * **data_labels** (*list or str*) -- List of data labels of the data sets that are plotted or
                     in case only one data set is plotted a string.
                   * **plot_title** (*list or str (optional)*) -- Title of the plots or subplots.
                   * **plot_name** (*str (optional)*) -- The file name of the plot.
                   * **subplot_assignment** (*list or None (optional)*) -- Assignment of the data sets to individual subplots.

      :returns: **fig** (*matplotlib.pyplot.figure or plotly.graph_objects.Figure*) -- Figure object of the plot.


   .. py:method:: remove_additional_plot_elements()

      Remove all added plot elements.


   .. py:method:: reset_gridspec()

      Reset gridspec settings.


   .. py:method:: return_data_labels()

      Return the labels of all data sets.

      :returns: **data_labels** (*list*) -- List of the labels of all data sets.



