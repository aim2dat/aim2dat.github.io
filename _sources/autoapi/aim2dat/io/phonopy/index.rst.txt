:py:mod:`aim2dat.io.phonopy`
============================

.. py:module:: aim2dat.io.phonopy

.. autoapi-nested-parse::

   Module of functions to read output-files from phonopy.



Module Contents
---------------


Functions
~~~~~~~~~

.. autoapisummary::

   aim2dat.io.phonopy.read_atom_proj_density_of_states
   aim2dat.io.phonopy.read_band_structure
   aim2dat.io.phonopy.read_qha_properties
   aim2dat.io.phonopy.read_thermal_properties
   aim2dat.io.phonopy.read_total_density_of_states



.. py:function:: read_atom_proj_density_of_states(parameter_file_name, mesh=100, force_sets_file_name=None, force_constants_file_name=None, phonopy_kwargs={})

   Read the atom projected density of phonon states from phonopy.

   :Parameters: * **parameter_file_name** (*str*) -- Phonopy yaml-file containing all settings and parameters.
                * **mesh** (*list*) -- Number of points in each dimension.
                * **force_sets_file_name** (*str or None*) -- Force sets file. If set to ``None`` force_constants_filename needs to be set.
                * **force_constants_file_name** (*str or None*) -- For ceonstants file. If set to ``None`` force_sets_file_name needs to be set.
                * **phonopy_kwargs** (*dict*) -- Additional keywords for ``phonopy.load``.

   :returns: *dict* -- Dictionary containing the projected density of states for each kind.


.. py:function:: read_band_structure(parameter_file_name, path, npoints, force_sets_file_name=None, force_constants_file_name=None, path_labels=None, phonopy_kwargs={})

   Read band structure using phonopy.

   :Parameters: * **parameter_file_name** (*str*) -- Phonopy yaml-file containing all settings and parameters.
                * **path** (*list*) -- Nested list of high-symmetry points.
                * **force_sets_file_name** (*str or None*) -- Force sets file. If set to ``None`` force_constants_filename needs to be set.
                * **force_constants_file_name** (*str or None*) -- For ceonstants file. If set to ``None`` force_sets_file_name needs to be set.
                * **path_labels** (*list or None*) -- List of labels for the high-symmetry points specified in ``path``.
                * **phonopy_kwargs** (*dict*) -- Additional keywords for ``phonopy.load``.

   :returns: * **output_bands** (*dict*) -- Dictionary containing the k-path and the eigenvalues.
             * **reference_cell** (*list*) -- Reference cell.


.. py:function:: read_qha_properties(calculation_folders=None, thermal_properties_file_names=None, ev_file_name=None, std_output_file_name=None, mesh=100, t_min=0, t_max=1000, t_step=10, phonopy_kwargs={})

   Read the outputs from a quasi-harmonic approximation calculation.

   :Parameters: * **calculation_folders** (*list or None*) -- Folders containing the calculations of different volumes. If ``None``
                  ``thermal_properties_file_names`` needs to be set instead.
                * **thermal_properties_file_names** (*list or None*) -- List of thermal properties yaml files generated by phonopy.
                * **ev_file_name** (*str or None*) -- File containing volumes and energies.
                * **std_output_file_name** (*str or None*) -- File name of the standard output files.
                * **mesh** (*list or int*) -- Number of points in each dimension.
                * **t_min** (*int*) -- Minimum temperature
                * **t_max** (*int*) -- Maximum temperature
                * **phonopy_kwargs** (*dict*) -- Additional keywords for ``phonopy.load``.

   :returns: *dict* -- Dictionary containing the qha properties.


.. py:function:: read_thermal_properties(parameter_file_name, mesh=100, t_min=0, t_max=1000, t_step=10, force_sets_file_name=None, force_constants_file_name=None, phonopy_kwargs={})

   Read the thermal properties from phonopy.

   :Parameters: * **parameter_file_name** (*str*) -- Phonopy yaml-file containing all settings and parameters.
                * **mesh** (*list*) -- Number of points in each dimension.
                * **t_min** (*int*) -- Minimum temperature
                * **t_max** (*int*) -- Maximum temperature
                * **force_sets_file_name** (*str or None*) -- Force sets file. If set to ``None`` force_constants_filename needs to be set.
                * **force_constants_file_name** (*str or None*) -- For ceonstants file. If set to ``None`` force_sets_file_name needs to be set.
                * **phonopy_kwargs** (*dict*) -- Additional keywords for ``phonopy.load``.

   :returns: *dict* -- Dictionary containing the thermal properties.


.. py:function:: read_total_density_of_states(parameter_file_name, mesh=100, force_sets_file_name=None, force_constants_file_name=None, phonopy_kwargs={})

   Read the total density of phonon states from phonopy.

   :Parameters: * **parameter_file_name** (*str*) -- Phonopy yaml-file containing all settings and parameters.
                * **mesh** (*list*) -- Number of points in each dimension.
                * **force_sets_file_name** (*str or None*) -- Force sets file. If set to ``None`` force_constants_filename needs to be set.
                * **force_constants_file_name** (*str or None*) -- For ceonstants file. If set to ``None`` force_sets_file_name needs to be set.
                * **phonopy_kwargs** (*dict*) -- Additional keywords for ``phonopy.load``.

   :returns: *dict* -- Dictionary containing the total density of states.


